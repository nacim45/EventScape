# Docker Build and Push using Azure CLI (Same as deploy-webapp.yml)
# This uses the EXACT same authentication method as your working deploy-webapp.yml

trigger:
- main

resources:
- repo: self

variables:
  acrName: 'eventbookingcontainer'
  imageName: 'nacimeventscape'
  tag: '$(Build.BuildId)'
  azureServiceConnection: 'eventbooking'

stages:
- stage: Build
  displayName: Build and push using Azure CLI
  jobs:
  - job: Build
    displayName: Build and Push
    pool:
      vmImage: ubuntu-latest
    steps:
    
    # Step 1: Build Docker image locally
    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(acrName).azurecr.io/$(imageName):$(tag)
          $(acrName).azurecr.io/$(imageName):latest
    
    # Step 2: Use Azure CLI to push (SAME METHOD AS deploy-webapp.yml)
    - task: AzureCLI@2
      displayName: 'Push to ACR using Azure CLI'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "=== AZURE CLI PUSH (SAME AS DEPLOY-WEBAPP) ==="
          echo "ACR: $(acrName)"
          echo "Image: $(imageName)"
          echo "Tag: $(tag)"
          
          # Login to ACR using Azure CLI (SAME as deploy-webapp.yml)
          echo "Logging into ACR..."
          az acr login --name $(acrName)
          
          # Push the images
          echo "Pushing image with tag $(tag)..."
          docker push $(acrName).azurecr.io/$(imageName):$(tag)
          
          echo "Pushing latest tag..."
          docker push $(acrName).azurecr.io/$(imageName):latest
          
          echo "âœ… Push completed successfully using Azure CLI!"
    
    # Step 3: Verify push was successful
    - task: AzureCLI@2
      displayName: 'Verify Push Success'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "=== VERIFYING PUSH SUCCESS ==="
          
          # Check if image exists in ACR
          az acr repository show --name $(acrName) --repository $(imageName)
          
          echo "âœ… Image successfully pushed and verified in ACR!"
          echo "ðŸš€ Ready for deployment via deploy-webapp.yml"