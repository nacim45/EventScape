@page
@model soft20181_starter.Pages.Admin.Events.CreateModel
@{
    ViewData["Title"] = "Create New Event - EventScape";
    Layout = "_Layout";
}

<div class="main-container my-5">
    <div class="featured-events-header">
        <h2 class="featured-title">Create New Event</h2>
    </div>
    
    <div class="row mb-4">
        <div class="col text-center">
            <div class="admin-navigation-links">
                <a href="/Admin" class="admin-nav-link">
                    <i class="fas fa-tachometer-alt"></i> Dashboard
                </a>
                <a href="/Admin/Events" class="admin-nav-link">
                    <i class="fas fa-calendar-alt"></i> All Events
                </a>
            </div>
        </div>
    </div>

    <div class="user-form-container">
        <div class="section-header">
            <h3 id="txt">Event Information</h3>
        </div>
        
        <div class="admin-form-wrapper">
            <form method="post" enctype="multipart/form-data" class="admin-form">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger admin-validation-summary"></div>
                
                <div class="admin-form-section">
                    <h3 class="admin-form-section-title">Basic Details</h3>
                    
                    <div class="form-group-row">
                        <div class="form-group">
                            <label asp-for="Event.title">Event Title</label>
                            <input asp-for="Event.title" class="form-control" placeholder="Enter a descriptive title" required />
                            <span asp-validation-for="Event.title" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group">
                            <label asp-for="Event.location">Location</label>
                            <input asp-for="Event.location" class="form-control" placeholder="City, Venue or Address" required />
                            <span asp-validation-for="Event.location" class="text-danger"></span>
                        </div>
                    </div>
                    
                    <div class="form-group-row">
                        <div class="form-group">
                            <label asp-for="Event.date">Event Date</label>
                            <input asp-for="Event.date" class="form-control" type="date" placeholder="YYYY-MM-DD" required />
                            <span asp-validation-for="Event.date" class="text-danger"></span>
                        </div>
                        
                        <div class="form-group">
                            <label asp-for="Event.price">Price</label>
                            <input asp-for="Event.price" class="form-control" placeholder="Â£50 or Free" required />
                            <span asp-validation-for="Event.price" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="admin-form-section">
                    <h3 class="admin-form-section-title">Details & Media</h3>
                    
                    <div class="form-group">
                        <label asp-for="Event.description">Description</label>
                        <textarea asp-for="Event.description" class="form-control" rows="6" placeholder="Enter a detailed description of your event" required></textarea>
                        <span asp-validation-for="Event.description" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group">
                        <label>Event Link Details (Required)</label>
                        <div class="form-group-row">
                            <div class="form-group">
                                <label for="EventId">Event ID</label>
                                <input type="text" id="EventId" name="EventId" class="form-control" placeholder="121" required />
                                <div class="form-hint">
                                    <i class="fas fa-info-circle"></i>
                                    Enter numeric ID for this event
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="EventLocation">Event Location</label>
                                <input type="text" id="EventLocation" name="EventLocation" class="form-control" placeholder="london" value="@Model.Event.location?.ToLower()" required />
                                <div class="form-hint">
                                    <i class="fas fa-info-circle"></i>
                                    Lowercase city name (same as location field above)
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-group mt-3">
                            <label asp-for="Event.link">Generated Event Link</label>
                            <input asp-for="Event.link" id="GeneratedLink" class="form-control" readonly required />
                            <span asp-validation-for="Event.link" class="text-danger"></span>
                            <div class="form-hint">
                                <i class="fas fa-info-circle"></i>
                                This link will be automatically generated - do not modify
                            </div>
                        </div>
                    </div>
                    
                    <div class="admin-form-section">
                        <h3 class="admin-form-section-title">Event Properties</h3>
                        <div class="form-group-row">
                            <div class="form-group">
                                <label for="EventCategory">Category</label>
                                <select id="EventCategory" name="EventCategory" class="form-control">
                                    <option value="">Select a category</option>
                                    <option value="Music">Music</option>
                                    <option value="Sports">Sports</option>
                                    <option value="Arts">Arts & Theatre</option>
                                    <option value="Food">Food & Drink</option>
                                    <option value="Business">Business</option>
                                    <option value="Education">Education</option>
                                    <option value="Social">Social</option>
                                    <option value="Other">Other</option>
                                </select>
                                <div class="form-hint">
                                    <i class="fas fa-info-circle"></i>
                                    Select a category that best describes your event
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="EventCapacity">Capacity</label>
                                <input type="number" id="EventCapacity" name="EventCapacity" class="form-control" placeholder="100" min="1" />
                                <div class="form-hint">
                                    <i class="fas fa-info-circle"></i>
                                    Maximum number of attendees (optional)
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-group-row">
                            <div class="form-group">
                                <label for="EventStartTime">Start Time</label>
                                <input type="time" id="EventStartTime" name="EventStartTime" class="form-control" />
                                <div class="form-hint">
                                    <i class="fas fa-info-circle"></i>
                                    When does the event start? (optional)
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="EventEndTime">End Time</label>
                                <input type="time" id="EventEndTime" name="EventEndTime" class="form-control" />
                                <div class="form-hint">
                                    <i class="fas fa-info-circle"></i>
                                    When does the event end? (optional)
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="EventTags">Tags</label>
                            <input type="text" id="EventTags" name="EventTags" class="form-control" placeholder="concert, live, music" />
                            <div class="form-hint">
                                <i class="fas fa-info-circle"></i>
                                Separate tags with commas (optional)
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group mt-4">
                        <label for="UploadedImages">Upload Images (Max 3)</label>
                        <div class="image-upload-container" id="imageUploadContainer">
                            <input type="file" name="UploadedImages" id="UploadedImages" accept="image/*" multiple class="form-control file-input" />
                            <div class="image-upload-overlay" id="imageUploadOverlay">
                                <i class="fas fa-cloud-upload-alt"></i>
                                <span id="upload-text">Drag & drop images here or click to browse</span>
                                <small>(Maximum 3 images, any format, 10MB each)</small>
                                <div class="upload-progress" id="uploadProgress" style="display: none;">
                                    <div class="progress-bar">
                                        <div class="progress-fill"></div>
                                    </div>
                                    <span class="progress-text">Processing images...</span>
                                </div>
                            </div>
                        </div>
                        <div id="image-preview-container" class="image-preview-container"></div>
                        <div class="form-hint">
                            <i class="fas fa-info-circle"></i>
                            Upload up to 3 high-quality images that showcase your event. Supports all image formats.
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="ImageUrls">Image URLs (Optional)</label>
                        <textarea name="ImageUrls" id="ImageUrls" class="form-control" rows="3" placeholder="https://example.com/image1.jpg&#10;https://example.com/image2.jpg"></textarea>
                        <div class="form-hint">
                            <i class="fas fa-info-circle"></i>
                            Enter one image URL per line. Images will be displayed in the order listed.
                        </div>
                    </div>
                </div>
                
                <div class="admin-form-actions">
                    <a asp-page="Index" class="admin-cancel-btn">
                        <i class="fas fa-times-circle"></i> Cancel
                    </a>
                    <button type="submit" class="admin-submit-btn">
                        <i class="fas fa-plus-circle"></i> Create Event
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="footer-spacer"></div>

@section Styles {
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/admin.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        /* Main container styling */
        .main-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background-color: transparent;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }
        
        /* Added footer spacer */
        .footer-spacer {
            height: 100px;
            width: 100%;
            clear: both;
        }
        
        /* Featured title styling */
        .featured-title {
            display: inline-block;
            background-color: #522B5B;
            color: white;
            padding: 15px 30px;
            border-radius: 4px;
            font-weight: bold;
            font-size: 28px;
            margin: 20px auto;
            text-align: center;
        }
        
        .featured-events-header {
            margin-top: 10px;
            text-align: center;
            margin-left: 0;
        }
        
        /* Navigation links */
        .admin-navigation-links {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin: 15px 0;
        }
        
        .admin-nav-link {
            display: inline-block;
            background-color: #854F6C;
            color: white;
            padding: 12px 25px;
            border-radius: 4px;
            text-decoration: none;
            font-weight: bold;
            font-size: 16px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
            min-width: 150px;
            text-align: center;
        }
        
        .admin-nav-link:hover {
            background-color: #522B5B;
            color: white;
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
            text-decoration: none;
        }
        
        .admin-nav-link i {
            margin-right: 8px;
        }
        
        /* Section header */
        .section-header {
            padding: 10px 0;
            border-radius: 5px;
            margin-top: 20px;
            text-align: center;
            max-width: 1200px;
            margin-left: auto;
            margin-right: auto;
            margin-bottom: 15px;
        }
        
        #txt {
            display: inline-block;
            background-color: #BFACB5;
            color: #522B5B;
            padding: 15px 30px;
            border-radius: 4px;
            font-weight: bold;
            font-size: 24px;
            margin: 10px auto;
            text-align: center;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
        
        /* Form container styling */
        .user-form-container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
            margin-bottom: 100px;
        }
        
        .admin-form-wrapper {
            background-color: #BFACB5;
            border-radius: 10px;
            padding: 30px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
            margin-top: 15px;
            margin-bottom: 50px;
        }
        
        .admin-form {
            width: 100%;
        }
        
        .admin-form-section {
            margin-bottom: 30px;
            padding-bottom: 25px;
            border-bottom: 1px solid #a5919a;
        }
        
        .admin-form-section:last-child {
            border-bottom: none;
        }
        
        .admin-form-section-title {
            color: #522B5B;
            font-size: 20px;
            margin-bottom: 20px;
            font-weight: bold;
            padding-bottom: 10px;
            border-bottom: 2px solid #522B5B;
        }
        
        /* Form group styling */
        .form-group-row {
            display: flex;
            flex-wrap: wrap;
            margin: 0 -10px;
        }
        
        .form-group {
            flex: 1 0 calc(50% - 20px);
            margin: 0 10px 20px;
            min-width: 250px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            color: #522B5B;
            font-weight: bold;
            font-size: 16px;
        }
        
        .form-control {
            display: block;
            width: 100%;
            padding: 10px 15px;
            font-size: 16px;
            border: 1px solid #522B5B;
            border-radius: 4px;
            background-color: #f9f5f7;
            color: #522B5B;
            box-sizing: border-box;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }
        
        input.form-control {
            height: 45px;
        }
        
        .form-control:focus {
            border-color: #522B5B;
            box-shadow: 0 0 8px rgba(82, 43, 91, 0.4);
            outline: none;
            background-color: #ffffff;
        }
        
        .text-danger {
            color: #dc3545;
            font-size: 14px;
            display: block;
            margin-top: 5px;
            font-weight: 500;
        }
        
        .form-hint {
            margin-top: 8px;
            font-size: 14px;
            color: #522B5B;
            display: flex;
            align-items: center;
        }
        
        .form-hint i {
            margin-right: 6px;
            color: #522B5B;
        }
        
        .admin-validation-summary {
            margin-bottom: 30px;
            border-radius: 8px;
            border-left: 4px solid #dc3545;
            background-color: #FFF0F1;
        }
        
        /* Action buttons */
        .admin-form-actions {
            display: flex;
            justify-content: space-between;
            margin-top: 40px;
        }
        
        .admin-cancel-btn {
            background-color: #d2c1c8;
            color: #522B5B;
            padding: 12px 30px;
            border-radius: 8px;
            font-weight: bold;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            text-decoration: none;
            font-size: 16px;
            border: none;
            min-width: 160px;
        }
        
        .admin-cancel-btn i {
            margin-right: 8px;
            font-size: 18px;
        }
        
        .admin-cancel-btn:hover {
            background-color: #c2b0b7;
            text-decoration: none;
            color: #522B5B;
            transform: translateY(-2px);
        }
        
        .admin-submit-btn {
            background-color: #522B5B;
            color: white;
            padding: 12px 30px;
            border-radius: 8px;
            font-weight: bold;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            text-decoration: none;
            font-size: 16px;
            border: none;
            min-width: 160px;
            box-shadow: 0 4px 10px rgba(82, 43, 91, 0.2);
        }
        
        .admin-submit-btn i {
            margin-right: 8px;
            font-size: 18px;
        }
        
        .admin-submit-btn:hover {
            background-color: #3f2146;
            transform: translateY(-3px);
            box-shadow: 0 6px 15px rgba(82, 43, 91, 0.3);
            color: white;
        }
        
        /* File upload styling */
        .image-upload-container {
            position: relative;
            min-height: 150px;
            border: 2px dashed #522B5B;
            border-radius: 10px;
            background-color: #f9f5f7;
            margin-bottom: 15px;
            transition: all 0.3s ease;
        }
        
        .image-upload-container.dragover {
            background-color: #f0e6eb;
            border-color: #522B5B;
        }
        
        .file-input {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
            z-index: 10;
        }
        
        .image-upload-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 20px;
            text-align: center;
            color: #522B5B;
            pointer-events: none;
        }
        
        .image-upload-overlay i {
            font-size: 40px;
            margin-bottom: 15px;
            color: #522B5B;
        }
        
        .image-upload-overlay span {
            font-size: 16px;
            font-weight: 500;
            margin-bottom: 8px;
        }
        
        .image-upload-overlay small {
            font-size: 14px;
            color: #854F6C;
        }
        
        .image-preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-top: 15px;
        }
        
        .image-preview {
            width: 100px;
            height: 100px;
            border-radius: 8px;
            overflow: hidden;
            position: relative;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        .image-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .remove-image {
            position: absolute;
            top: 5px;
            right: 5px;
            width: 20px;
            height: 20px;
            background-color: rgba(220, 53, 69, 0.8);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            cursor: pointer;
            font-size: 12px;
        }
        
        .remove-image:hover {
            background-color: rgba(220, 53, 69, 1);
        }
        
        /* Responsive adjustments */
        @@media (max-width: 992px) {
            .main-container {
                padding: 15px;
            }
            
            .admin-form-wrapper {
                padding: 20px;
            }
            
            .form-group-row {
                flex-direction: column;
            }
            
            .form-group {
                flex: 1 0 100%;
                margin: 0 0 20px;
            }
        }
        
        @@media (max-width: 768px) {
            .admin-form-wrapper {
                padding: 15px;
            }
            
            .admin-form-actions {
                flex-direction: column;
                gap: 15px;
            }
            
            .admin-cancel-btn, .admin-submit-btn {
                width: 100%;
            }
            
            .admin-navigation-links {
                flex-direction: column;
                gap: 10px;
            }
            
            .admin-nav-link {
                width: 100%;
            }
            
            .featured-title {
                font-size: 24px;
                padding: 12px 20px;
            }
            
            #txt {
                font-size: 20px;
                padding: 10px 20px;
            }
        }
        
        /* Animation effects */
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .admin-form-section {
            animation: fadeIn 0.5s ease-out forwards;
        }
        
        .admin-form-section:nth-child(2) {
            animation-delay: 0.2s;
        }
        
        /* Additional styling for better UX */
        .mt-4 {
            margin-top: 20px;
        }
        
        .mt-3 {
            margin-top: 15px;
        }
        
        /* Enhanced Image Upload Styling */
        .image-upload-container {
            position: relative;
            border: 3px dashed #BFACB5;
            border-radius: 12px;
            padding: 40px 20px;
            text-align: center;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            cursor: pointer;
            overflow: hidden;
        }
        
        .image-upload-container:hover {
            border-color: #854F6C;
            background: linear-gradient(135deg, #f0f0f0 0%, #e0e0e0 100%);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(133, 79, 108, 0.15);
        }
        
        .image-upload-container.dragover {
            border-color: #522B5B;
            background: linear-gradient(135deg, #e8f4fd 0%, #d1ecf1 100%);
            transform: scale(1.02);
            box-shadow: 0 12px 35px rgba(82, 43, 91, 0.25);
        }
        
        .image-upload-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background: transparent;
            z-index: 2;
            pointer-events: none;
        }
        
        .image-upload-overlay i {
            font-size: 48px;
            color: #522B5B;
            margin-bottom: 15px;
            transition: all 0.3s ease;
        }
        
        .image-upload-container:hover .image-upload-overlay i {
            color: #854F6C;
            transform: scale(1.1);
        }
        
        .image-upload-overlay span {
            font-size: 18px;
            font-weight: 600;
            color: #522B5B;
            margin-bottom: 8px;
        }
        
        .image-upload-overlay small {
            color: #6c757d;
            font-size: 14px;
        }
        
        .file-input {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
            z-index: 3;
        }
        
        .image-preview-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-top: 20px;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 8px;
            border: 1px solid #dee2e6;
        }
        
        .image-preview {
            position: relative;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            background: white;
        }
        
        .image-preview:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
        
        .image-preview img {
            width: 100%;
            height: 120px;
            object-fit: cover;
            display: block;
        }
        
        .image-preview .remove-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background: rgba(220, 53, 69, 0.9);
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            font-size: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .image-preview .remove-btn:hover {
            background: rgba(220, 53, 69, 1);
            transform: scale(1.1);
        }
        
        .upload-progress {
            margin-top: 15px;
            width: 100%;
            max-width: 300px;
        }
        
        .progress-bar {
            width: 100%;
            height: 6px;
            background: #e9ecef;
            border-radius: 3px;
            overflow: hidden;
            margin-bottom: 8px;
        }
        
        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #522B5B, #854F6C);
            width: 0%;
            transition: width 0.3s ease;
            animation: progress-animation 2s ease-in-out infinite;
        }
        
        @@keyframes progress-animation {
            0% { width: 0%; }
            50% { width: 70%; }
            100% { width: 100%; }
        }
        
        .progress-text {
            font-size: 14px;
            color: #522B5B;
            font-weight: 500;
        }
        
        .upload-success {
            color: #28a745;
            font-weight: 600;
        }
        
        .upload-error {
            color: #dc3545;
            font-weight: 600;
        }
    </style>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Event link generation
            const eventIdInput = document.getElementById('EventId');
            const eventLocationInput = document.getElementById('EventLocation');
            const generatedLinkInput = document.getElementById('GeneratedLink');
            const mainLocationInput = document.querySelector('input[name="Event.location"]');
            
            function updateGeneratedLink() {
                const id = eventIdInput.value.trim();
                const location = eventLocationInput.value.trim().toLowerCase();
                
                if (id && location) {
                    generatedLinkInput.value = `http://localhost:5139/EventDetail?location=${location}&id=${id}`;
                } else {
                    generatedLinkInput.value = '';
                }
            }
            
            // Auto-update event location when main location changes
            if (mainLocationInput) {
                mainLocationInput.addEventListener('input', function() {
                    eventLocationInput.value = this.value.trim().toLowerCase();
                    updateGeneratedLink();
                });
            }
            
            eventIdInput.addEventListener('input', updateGeneratedLink);
            eventLocationInput.addEventListener('input', updateGeneratedLink);
            
            // Initialize the link on page load
            updateGeneratedLink();
            
            // Enhance validation experience
            const form = document.querySelector('.admin-form');
            
            form.addEventListener('submit', function(e) {
                // Update the generated link one final time before submission
                updateGeneratedLink();
                
                if (!form.checkValidity()) {
                    e.preventDefault();
                    
                    // Add validation styling to invalid inputs
                    const invalidInputs = form.querySelectorAll(':invalid');
                    invalidInputs.forEach(input => {
                        input.classList.add('is-invalid');
                    });
                    
                    // Scroll to first invalid input
                    if (invalidInputs.length > 0) {
                        invalidInputs[0].focus();
                        invalidInputs[0].scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                }
            });
            
            // Remove validation classes when input changes
            const inputs = form.querySelectorAll('.form-control');
            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    if (this.checkValidity()) {
                        this.classList.remove('is-invalid');
                    }
                });
            });
            
            // Enhanced File upload handling
            const uploadInput = document.getElementById('UploadedImages');
            const uploadContainer = document.getElementById('imageUploadContainer');
            const uploadOverlay = document.getElementById('imageUploadOverlay');
            const previewContainer = document.getElementById('image-preview-container');
            const uploadText = document.getElementById('upload-text');
            const uploadProgress = document.getElementById('uploadProgress');
            const progressFill = uploadProgress ? uploadProgress.querySelector('.progress-fill') : null;
            const progressText = uploadProgress ? uploadProgress.querySelector('.progress-text') : null;
            
            let uploadedFiles = [];
            
            if (uploadInput && uploadContainer && previewContainer) {
                // Handle drag events
                ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                    uploadContainer.addEventListener(eventName, preventDefaults, false);
                });
                
                function preventDefaults(e) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                
                ['dragenter', 'dragover'].forEach(eventName => {
                    uploadContainer.addEventListener(eventName, highlight, false);
                });
                
                ['dragleave', 'drop'].forEach(eventName => {
                    uploadContainer.addEventListener(eventName, unhighlight, false);
                });
                
                function highlight() {
                    uploadContainer.classList.add('dragover');
                    if (uploadText) {
                        uploadText.textContent = "Drop images here!";
                        uploadText.classList.add('upload-success');
                    }
                }
                
                function unhighlight() {
                    uploadContainer.classList.remove('dragover');
                    if (uploadText) {
                        updateUploadText();
                        uploadText.classList.remove('upload-success');
                    }
                }
                
                // Handle file selection
                uploadInput.addEventListener('change', handleFiles, false);
                uploadContainer.addEventListener('drop', handleDrop, false);
                
                function handleDrop(e) {
                    const dt = e.dataTransfer;
                    const files = dt.files;
                    handleFileSelection(files);
                }
                
                function handleFiles() {
                    const files = uploadInput.files;
                    handleFileSelection(files);
                }
                
                function handleFileSelection(files) {
                    if (!files || files.length === 0) return;
                    
                    // Show progress
                    if (uploadProgress) {
                        uploadProgress.style.display = 'block';
                    }
                    
                    // Limit to 3 images and validate
                    const validFiles = Array.from(files)
                        .filter(file => file.type.startsWith('image/'))
                        .slice(0, 3);
                    
                    if (validFiles.length === 0) {
                        showError('Please select valid image files.');
                        return;
                    }
                    
                    // Clear previous previews
                    previewContainer.innerHTML = '';
                    uploadedFiles = [];
                    
                    // Process each file
                    validFiles.forEach((file, index) => {
                        const reader = new FileReader();
                        
                        reader.onload = function(e) {
                            createImagePreview(e.target.result, file, index);
                            
                            // Update progress
                            if (progressFill) {
                                progressFill.style.width = `${((index + 1) / validFiles.length) * 100}%`;
                            }
                            
                            // Hide progress when all files are processed
                            if (index === validFiles.length - 1) {
                                setTimeout(() => {
                                    if (uploadProgress) {
                                        uploadProgress.style.display = 'none';
                                    }
                                    if (progressFill) {
                                        progressFill.style.width = '0%';
                                    }
                                }, 500);
                            }
                        };
                        
                        reader.onerror = function() {
                            showError(`Error reading file: ${file.name}`);
                        };
                        
                        reader.readAsDataURL(file);
                        uploadedFiles.push(file);
                    });
                    
                    // Update file input
                    const dataTransfer = new DataTransfer();
                    validFiles.forEach(file => dataTransfer.items.add(file));
                    uploadInput.files = dataTransfer.files;
                    
                    updateUploadText();
                }
                
                function createImagePreview(src, file, index) {
                    const preview = document.createElement('div');
                    preview.className = 'image-preview';
                    preview.dataset.index = index;
                    
                    const img = document.createElement('img');
                    img.src = src;
                    img.alt = file.name;
                    
                    const removeBtn = document.createElement('button');
                    removeBtn.className = 'remove-btn';
                    removeBtn.innerHTML = '<i class="fas fa-times"></i>';
                    removeBtn.onclick = function() {
                        removeImage(index);
                    };
                    
                    preview.appendChild(img);
                    preview.appendChild(removeBtn);
                    previewContainer.appendChild(preview);
                }
                
                function removeImage(index) {
                    // Remove from uploadedFiles array
                    uploadedFiles.splice(index, 1);
                    
                    // Update file input
                    const dataTransfer = new DataTransfer();
                    uploadedFiles.forEach(file => dataTransfer.items.add(file));
                    uploadInput.files = dataTransfer.files;
                    
                    // Recreate previews
                    previewContainer.innerHTML = '';
                    uploadedFiles.forEach((file, newIndex) => {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            createImagePreview(e.target.result, file, newIndex);
                        };
                        reader.readAsDataURL(file);
                    });
                    
                    updateUploadText();
                }
                
                function updateUploadText() {
                    if (uploadText) {
                        if (uploadedFiles.length > 0) {
                            uploadText.textContent = `${uploadedFiles.length} image(s) selected`;
                            uploadText.classList.add('upload-success');
                        } else {
                            uploadText.textContent = "Drag & drop images here or click to browse";
                            uploadText.classList.remove('upload-success');
                        }
                    }
                }
                
                function showError(message) {
                    if (uploadText) {
                        uploadText.textContent = message;
                        uploadText.classList.add('upload-error');
                        setTimeout(() => {
                            uploadText.classList.remove('upload-error');
                            updateUploadText();
                        }, 3000);
                    }
                }
                
                // Initialize
                updateUploadText();
            }
        });
    </script>
    <style>
        /* Additional validation styles */
        .is-invalid {
            border-color: #dc3545 !important;
            background-color: rgba(220, 53, 69, 0.1) !important;
        }
        
        @@keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
            20%, 40%, 60%, 80% { transform: translateX(5px); }
        }
        
        .shake {
            animation: shake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
        }
    </style>
} 