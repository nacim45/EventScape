@page
@model EditSearchResultsModel
@{
    ViewData["Title"] = "Edit Event Results - EventScape";
    Layout = "_Layout";
}

<div class="container my-5">
    <div class="featured-events-header">
        <h2 class="featured-title">Edit Events Results</h2>
    </div>
    
    <div class="admin-navigation-container">
        <a href="/Admin" class="admin-nav-btn">
                    <i class="fas fa-tachometer-alt"></i> Dashboard
                </a>
        <a href="/Admin/Events" class="admin-nav-btn">
                    <i class="fas fa-calendar-alt"></i> All Events
                </a>
    </div>

    <div class="user-form-container">
        <div class="section-header">
            <h3 id="txt">Search Results</h3>
        </div>
        
        <div class="admin-form-wrapper">
            @if (!Model.HasSearchResults)
            {
                <div class="alert alert-info search-no-results">
                    <i class="fas fa-info-circle"></i>
                    <span>No events found matching your search criteria. Please try a different search.</span>
                </div>
                <div class="text-center mt-4">
                    <a asp-page="SearchForEdit" class="btn admin-action-btn admin-cancel-btn">
                        <i class="fas fa-arrow-left"></i> Back to Search
                    </a>
                </div>
            }
            else
            {
                <div class="events-list-container">
                    @foreach (var eventItem in Model.Events)
                    {
                        <div class="event-card">
                            <div class="event-image">
                                @if (eventItem.images != null && eventItem.images.Any())
                                {
                                    <div class="event-thumbnail-container">
                                    <img src="/@eventItem.images.First()" alt="@eventItem.title" class="event-thumbnail">
                                    </div>
                                }
                                else
                                {
                                    <div class="event-placeholder">
                                        <i class="fas fa-image"></i>
                                        <span>No Image</span>
                                    </div>
                                }
                            </div>
                            <div class="event-details">
                                <h3 class="event-title">@eventItem.title</h3>
                                <div class="event-info-grid">
                                    <div class="event-info-item">
                                        <i class="fas fa-map-marker-alt"></i>
                                        <span>@(char.ToUpper(eventItem.location[0]) + eventItem.location.Substring(1))</span>
                                    </div>
                                    <div class="event-info-item">
                                        <i class="fas fa-calendar-day"></i>
                                        <span>@eventItem.date</span>
                                    </div>
                                    <div class="event-info-item">
                                        <i class="fas fa-clock"></i>
                                        <span>@(eventItem.StartTime ?? "Not specified") - @(eventItem.EndTime ?? "Not specified")</span>
                                    </div>
                                    <div class="event-info-item">
                                        <i class="fas fa-pound-sign"></i>
                                        <span>@eventItem.price</span>
                                    </div>
                                    <div class="event-info-item">
                                        <i class="fas fa-tag"></i>
                                        <span>@(eventItem.Category ?? "Other")</span>
                                    </div>
                                    <div class="event-info-item">
                                        <i class="fas fa-users"></i>
                                        <span>Capacity: @(eventItem.Capacity.HasValue ? eventItem.Capacity.Value.ToString() : "Unlimited")</span>
                                    </div>
                                    @if (!string.IsNullOrEmpty(eventItem.Tags))
                                    {
                                        <div class="event-info-item">
                                            <i class="fas fa-tags"></i>
                                            <span>@eventItem.Tags</span>
                                        </div>
                                    }
                                    <div class="event-info-item">
                                        <i class="fas fa-info-circle"></i>
                                        <span>Status: 
                                            <span class="status-badge @(eventItem.Status == "Active" ? "status-active" : eventItem.Status == "Cancelled" ? "status-cancelled" : "status-pending")">
                                                @eventItem.Status
                                            </span>
                                        </span>
                                    </div>
                                    <div class="event-info-item">
                                        <i class="fas fa-calendar-check"></i>
                                        <span>
                                            Created: @eventItem.CreatedAt.ToString("g")
                                            @if (eventItem.UpdatedAt.HasValue)
                                            {
                                                <br />
                                                <text><i class="fas fa-calendar-plus"></i> Updated: </text>@eventItem.UpdatedAt.Value.ToString("g")
                                            }
                                        </span>
                                    </div>
                                    @if (eventItem.IsDeleted)
                                    {
                                        <div class="event-info-item text-danger">
                                            <i class="fas fa-trash-alt"></i>
                                            <span>This event has been deleted</span>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(eventItem.link))
                                    {
                                        <div class="event-info-item">
                                            <i class="fas fa-link"></i>
                                            <a href="@eventItem.link" target="_blank" rel="noopener noreferrer">Event Website</a>
                                        </div>
                                    }
                                </div>
                                <div class="event-description">
                                    <p>@(eventItem.description.Length > 150 ? eventItem.description.Substring(0, 150) + "..." : eventItem.description)</p>
                                </div>
                            </div>
                            <div class="event-actions">
                                <button onclick="showEditForm(@eventItem.id, '@Html.Raw(eventItem.title)', '@Html.Raw(eventItem.description)', '@Html.Raw(eventItem.location)', '@Html.Raw(eventItem.date)', '@Html.Raw(eventItem.price)', '@(eventItem.Category ?? "Other")', @(eventItem.Capacity ?? 0), '@Html.Raw(eventItem.StartTime ?? "")', '@Html.Raw(eventItem.EndTime ?? "")', '@Html.Raw(eventItem.Tags ?? "")')" class="admin-action-btn admin-edit-btn">
                                    <i class="fas fa-edit"></i> Edit Event
                                </button>
                            </div>
                        </div>
                    }
                </div>

                <div class="text-center mt-4">
                    <a asp-page="SearchForEdit" class="btn admin-action-btn admin-cancel-btn">
                        <i class="fas fa-arrow-left"></i> Back to Search
                    </a>
                </div>
            }
        </div>
    </div>

    <!-- Edit Form Container -->
    <div id="editFormContainer" class="edit-form-overlay" style="display: none;">
        <div class="edit-form-modal">
            <div class="edit-form-header">
                <h3>Edit Event</h3>
                <button onclick="hideEditForm()" class="close-btn">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <form id="editEventForm" method="post" class="edit-form-content">
                @Html.AntiForgeryToken()
                <input type="hidden" id="editEventId" name="EventId" />
                <input type="hidden" id="editEventTitle" name="EventTitle" />
                
                <div class="form-grid">
                    <div class="form-group">
                        <label>Description</label>
                        <textarea id="editEventDescription" name="EventDescription" class="form-control" required minlength="10" rows="4"></textarea>
                        <div class="invalid-feedback">Please provide a description (at least 10 characters).</div>
                    </div>
                    
                    <div class="form-group">
                        <label>Location</label>
                        <input id="editEventLocation" name="EventLocation" class="form-control" required />
                        <div class="invalid-feedback">Please provide a location.</div>
                    </div>
                    
                    <div class="form-group">
                        <label>Date</label>
                        <input id="editEventDate" name="EventDate" type="date" class="form-control" required min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                        <div class="invalid-feedback">Please select a future date.</div>
                    </div>
                    
                    <div class="form-group">
                        <label>Time</label>
                        <input id="editEventStartTime" name="EventStartTime" type="time" class="form-control" />
                        <div class="invalid-feedback">Please provide a valid time.</div>
                    </div>
                    
                    <div class="form-group">
                        <label>Price</label>
                        <input id="editEventPrice" name="EventPrice" class="form-control" required pattern="^(\d+(\.\d{1,2})?|Free)$" />
                        <div class="invalid-feedback">Price must be a number (e.g., 10.00) or 'Free'.</div>
                    </div>
                    
                    <div class="form-group">
                        <label>Category</label>
                        <select id="editEventCategory" name="EventCategory" class="form-control">
                            <option value="Music">Music</option>
                            <option value="Sports">Sports</option>
                            <option value="Arts">Arts</option>
                            <option value="Food">Food</option>
                            <option value="Business">Business</option>
                            <option value="Education">Education</option>
                            <option value="Social">Social</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label>Capacity</label>
                        <input id="editEventCapacity" name="EventCapacity" type="number" class="form-control" min="1" />
                        <div class="invalid-feedback">Capacity must be a positive number.</div>
                    </div>
                    
                    <div class="form-group">
                        <label>End Time</label>
                        <input id="editEventEndTime" name="EventEndTime" type="time" class="form-control" />
                        <div class="invalid-feedback">Please provide a valid time.</div>
                    </div>
                    
                    <div class="form-group">
                        <label>Tags</label>
                        <input id="editEventTags" name="EventTags" class="form-control" />
                        <div class="invalid-feedback">Please provide valid tags.</div>
                    </div>
                </div>
                
                <div class="confirmation-message">
                    Are you sure you want to save these event details?
                </div>
                
                <div class="form-actions">
                    <button type="submit" class="btn-edit">
                        <i class="fas fa-save"></i> Save Changes
                    </button>
                    <button type="button" onclick="hideEditForm()" class="btn-cancel">
                        <i class="fas fa-times"></i> Cancel
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/admin.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        /* Main container styling */
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Admin navigation container */
        .admin-navigation-container {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin: 30px 0;
        }

        .admin-nav-btn {
            display: inline-flex;
            align-items: center;
            padding: 12px 24px;
            background-color: #522B5B;
            color: white;
            border-radius: 8px;
            text-decoration: none;
            font-weight: bold;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .admin-nav-btn:hover {
            background-color: #854F6C;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
            color: white;
            text-decoration: none;
        }

        .admin-nav-btn i {
            margin-right: 8px;
            font-size: 16px;
        }

        /* Featured Events title styling */
        .featured-title {
            display: inline-block;
            background-color: #522B5B;
            color: white;
            padding: 15px 30px;
            border-radius: 8px;
            font-weight: bold;
            font-size: 28px;
            margin: 40px auto;
            text-align: center;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }
        
        .featured-events-header {
            margin-top: 40px;
            text-align: center;
            margin-bottom: 30px;
        }

        /* Event card styling */
        .events-list-container {
            margin: 30px 0;
        }

        .event-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 30px;
            display: flex;
            align-items: flex-start;
            gap: 25px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .event-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
        }

        .event-thumbnail-container {
            width: 150px;
            height: 150px;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .event-thumbnail {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .event-card:hover .event-thumbnail {
            transform: scale(1.05);
        }

        .event-placeholder {
            width: 150px;
            height: 150px;
            background-color: #f8f9fa;
            border-radius: 12px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            color: #adb5bd;
            gap: 10px;
        }

        .event-placeholder i {
            font-size: 40px;
        }

        .event-placeholder span {
            font-size: 14px;
            color: #6c757d;
        }

        .event-details {
            flex: 1;
        }

        .event-title {
            color: #522B5B;
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 20px;
            transition: color 0.3s ease;
        }

        .event-card:hover .event-title {
            color: #854F6C;
        }

        .event-info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }

        .event-info-item {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 10px;
            background-color: #f8f9fa;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .event-info-item:hover {
            background-color: #e9ecef;
            transform: translateX(5px);
        }

        .event-info-item i {
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: rgba(133, 79, 108, 0.1);
            color: #854F6C;
            border-radius: 6px;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .event-info-item:hover i {
            background-color: #854F6C;
            color: white;
        }

        .event-info-item span {
            color: #6c757d;
            font-size: 14px;
            flex: 1;
        }

        .status-badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: bold;
            text-transform: uppercase;
        }

        .status-active {
            background-color: #28a745;
            color: white;
        }

        .status-cancelled {
            background-color: #dc3545;
            color: white;
        }

        .status-pending {
            background-color: #ffc107;
            color: #212529;
        }

        .event-description {
            margin-top: 20px;
            color: #6c757d;
            font-size: 14px;
            line-height: 1.6;
        }

        .event-actions {
            margin-top: 20px;
            display: flex;
            gap: 15px;
        }

        .admin-action-btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: bold;
            font-size: 16px;
            text-decoration: none;
            transition: all 0.3s ease;
            min-width: 150px;
        }

        .admin-edit-btn {
            background-color: #522B5B;
            color: white;
            box-shadow: 0 4px 12px rgba(82, 43, 91, 0.2);
        }

        .admin-edit-btn:hover {
            background-color: #854F6C;
            color: white;
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(82, 43, 91, 0.3);
            text-decoration: none;
        }

        .admin-edit-btn i {
            margin-right: 10px;
            font-size: 18px;
        }

        .admin-cancel-btn {
            background-color: #f8f9fa;
            color: #6c757d;
            border: 1px solid #dee2e6;
        }

        .admin-cancel-btn:hover {
            background-color: #e9ecef;
            color: #495057;
            transform: translateY(-3px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
            text-decoration: none;
        }

        .search-no-results {
            background-color: #fff3cd;
            border: 1px solid #ffeeba;
            color: #856404;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 30px;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .search-no-results i {
            font-size: 24px;
            color: #856404;
        }

        /* Responsive styles */
        @@media (max-width: 992px) {
            .event-info-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @@media (max-width: 768px) {
            .event-card {
                flex-direction: column;
                align-items: center;
                text-align: center;
                padding: 20px;
            }

            .event-thumbnail-container,
            .event-placeholder {
                width: 200px;
                height: 200px;
                margin-bottom: 20px;
            }

            .event-info-grid {
                grid-template-columns: 1fr;
            }

            .event-info-item {
                text-align: left;
            }

            .event-actions {
                flex-direction: column;
                width: 100%;
            }

            .admin-action-btn {
                width: 100%;
            }

            .admin-navigation-container {
                flex-direction: column;
            }

            .admin-nav-btn {
                width: 100%;
                justify-content: center;
            }
        }

        @@media (max-width: 480px) {
            .event-thumbnail-container,
            .event-placeholder {
                width: 150px;
                height: 150px;
            }

            .event-title {
                font-size: 20px;
            }

            .event-info-item {
                font-size: 13px;
            }

            .featured-title {
                font-size: 24px;
                padding: 12px 20px;
            }
        }

        /* Edit Form Overlay Styles */
        .edit-form-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            z-index: 9999;
            display: flex;
            justify-content: center;
            align-items: center;
            animation: fadeIn 0.3s ease;
        }

        .edit-form-modal {
            background: white;
            border-radius: 12px;
            max-width: 800px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            animation: slideIn 0.3s ease;
        }

        .edit-form-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 30px;
            border-bottom: 1px solid #e9ecef;
            background-color: #522B5B;
            color: white;
            border-radius: 12px 12px 0 0;
        }

        .edit-form-header h3 {
            margin: 0;
            font-size: 24px;
            font-weight: bold;
        }

        .close-btn {
            background: none;
            border: none;
            color: white;
            font-size: 24px;
            cursor: pointer;
            padding: 5px;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .close-btn:hover {
            background-color: rgba(255, 255, 255, 0.2);
            transform: scale(1.1);
        }

        .edit-form-content {
            padding: 30px;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
            margin-bottom: 30px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            color: #522B5B;
            font-weight: 600;
            margin-bottom: 8px;
        }

        .form-control {
            width: 100%;
            padding: 12px;
            border: 2px solid #BFACB5;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: #522B5B;
            box-shadow: 0 0 0 4px rgba(82, 43, 91, 0.1);
            outline: none;
        }

        .confirmation-message {
            text-align: center;
            color: #522B5B;
            font-weight: bold;
            margin: 30px 0;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .form-actions {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 30px;
        }

        .btn-edit {
            padding: 12px 30px;
            background-color: #522B5B;
            color: white;
            border: none;
            border-radius: 8px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .btn-edit:hover {
            background-color: #854F6C;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(82, 43, 91, 0.2);
        }

        .btn-cancel {
            padding: 12px 30px;
            background-color: #f8f9fa;
            color: #6c757d;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .btn-cancel:hover {
            background-color: #e9ecef;
            color: #495057;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        }

        .invalid-feedback {
            display: none;
            color: #dc3545;
            font-size: 14px;
            margin-top: 5px;
        }

        .form-control.is-invalid {
            border-color: #dc3545;
            background-color: #fff8f8;
        }

        .form-control.is-invalid ~ .invalid-feedback {
            display: block;
        }

        @@keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @@keyframes slideIn {
            from { 
                opacity: 0;
                transform: translateY(-50px) scale(0.9);
            }
            to { 
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        @@media (max-width: 768px) {
            .form-grid {
                grid-template-columns: 1fr;
            }

            .form-actions {
                flex-direction: column;
            }
            
            .btn-edit,
            .btn-cancel {
                width: 100%;
            }

            .edit-form-modal {
                width: 95%;
                margin: 20px;
            }
        }
    </style>
} 

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add fade-in animation to event cards
            const cards = document.querySelectorAll('.event-card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    card.style.transition = 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });

            // Add hover effects to event info items
            const infoItems = document.querySelectorAll('.event-info-item');
            infoItems.forEach(item => {
                item.addEventListener('mouseenter', function() {
                    const icon = this.querySelector('i');
                    icon.style.transform = 'scale(1.1)';
                });
                
                item.addEventListener('mouseleave', function() {
                    const icon = this.querySelector('i');
                    icon.style.transform = 'scale(1)';
                });
            });

            // Add click effect to buttons
            const buttons = document.querySelectorAll('.admin-action-btn');
            buttons.forEach(button => {
                button.addEventListener('mousedown', function() {
                    this.style.transform = 'scale(0.95)';
                });
                
                button.addEventListener('mouseup', function() {
                    this.style.transform = '';
                });
                
                button.addEventListener('mouseleave', function() {
                    this.style.transform = '';
                });
            });

            // Show success message if present in TempData
            if (document.querySelector('.success-message')) {
                setTimeout(() => {
                    const message = document.querySelector('.success-message');
                    message.style.opacity = '0';
                    setTimeout(() => message.remove(), 300);
                }, 3000);
            }

            // Handle edit form submission
            const editForm = document.getElementById('editEventForm');
            if (editForm) {
                editForm.addEventListener('submit', async function(e) {
                    e.preventDefault();
                    
                    if (!editForm.checkValidity()) {
                        const invalidInputs = editForm.querySelectorAll(':invalid');
                        invalidInputs.forEach(input => {
                            input.classList.add('is-invalid');
                            input.classList.add('shake');
                            setTimeout(() => input.classList.remove('shake'), 500);
                        });
                        
                        if (invalidInputs.length > 0) {
                            invalidInputs[0].focus();
                            invalidInputs[0].scrollIntoView({ behavior: 'smooth', block: 'center' });
                        }
                        return;
                    }

                    const submitBtn = editForm.querySelector('button[type="submit"]');
                    const originalText = submitBtn.innerHTML;
                    submitBtn.disabled = true;
                    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Saving...';

                    try {
                        const formData = new FormData(editForm);
                        const response = await fetch('', {
                            method: 'POST',
                            body: formData,
                            headers: {
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            }
                        });

                        if (response.ok) {
                            const result = await response.text();
                            if (result.includes('success')) {
                                showSuccessMessage('Event updated successfully!');
                                hideEditForm();
                                // Reload the page to show updated data
                                setTimeout(() => window.location.reload(), 1500);
                            } else {
                                showErrorMessage('An error occurred while updating the event.');
                            }
                        } else {
                            showErrorMessage('An error occurred while updating the event.');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        showErrorMessage('An error occurred while updating the event.');
                    } finally {
                        submitBtn.disabled = false;
                        submitBtn.innerHTML = originalText;
                    }
                });
            }
        });

        function showEditForm(id, title, description, location, date, price, category, capacity, startTime, endTime, tags) {
            // Populate form fields
            document.getElementById('editEventId').value = id;
            document.getElementById('editEventTitle').value = title;
            document.getElementById('editEventDescription').value = description;
            document.getElementById('editEventLocation').value = location;
            document.getElementById('editEventDate').value = date;
            document.getElementById('editEventPrice').value = price;
            document.getElementById('editEventCategory').value = category;
            document.getElementById('editEventCapacity').value = capacity;
            document.getElementById('editEventStartTime').value = startTime;
            document.getElementById('editEventEndTime').value = endTime;
            document.getElementById('editEventTags').value = tags;

            // Show the form
            document.getElementById('editFormContainer').style.display = 'flex';
            document.body.style.overflow = 'hidden';
        }

        function hideEditForm() {
            document.getElementById('editFormContainer').style.display = 'none';
            document.body.style.overflow = 'auto';
            
            // Clear form validation
            const form = document.getElementById('editEventForm');
            const inputs = form.querySelectorAll('.form-control');
            inputs.forEach(input => {
                input.classList.remove('is-invalid');
            });
        }

        function showSuccessMessage(message) {
            const successDiv = document.createElement('div');
            successDiv.className = 'alert alert-success';
            successDiv.style.cssText = 'position: fixed; top: 20px; right: 20px; z-index: 10000; padding: 15px; border-radius: 8px; background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb;';
            successDiv.innerHTML = `<i class="fas fa-check-circle"></i> ${message}`;
            document.body.appendChild(successDiv);
            
            setTimeout(() => {
                successDiv.remove();
            }, 3000);
        }

        function showErrorMessage(message) {
            const errorDiv = document.createElement('div');
            errorDiv.className = 'alert alert-danger';
            errorDiv.style.cssText = 'position: fixed; top: 20px; right: 20px; z-index: 10000; padding: 15px; border-radius: 8px; background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb;';
            errorDiv.innerHTML = `<i class="fas fa-exclamation-circle"></i> ${message}`;
            document.body.appendChild(errorDiv);
            
            setTimeout(() => {
                errorDiv.remove();
            }, 3000);
        }

        // Close form when clicking outside
        document.getElementById('editFormContainer').addEventListener('click', function(e) {
            if (e.target === this) {
                hideEditForm();
            }
        });

        // Add shake animation
        const style = document.createElement('style');
        style.textContent = `
            @@keyframes shake {
                0%, 100% { transform: translateX(0); }
                10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
                20%, 40%, 60%, 80% { transform: translateX(5px); }
            }
            .shake {
                animation: shake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
            }
        `;
        document.head.appendChild(style);
    </script>
} 