# Pipeline 3: ACR ‚Üí App Service (Deploy to Web App)
# This pipeline deploys from ACR to Azure Web App

trigger: none  # Triggered by Pipeline 2

resources:
  pipelines:
  - pipeline: build_pipeline
    source: "Pipeline2-ACR-Push"  # Update with your actual Pipeline 2 name
    trigger: true

variables:
  acrName: 'eventbookingcontainer'
  imageName: 'nacimeventscape'
  resourceGroup: 'EventBooking'
  appServiceName: 'EventScapeApp'
  azureServiceConnection: 'eventbooking'

stages:
- stage: Deploy
  displayName: Deploy to Web App
  jobs:
  - job: Deploy
    displayName: Deploy from ACR
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    
    # Validate Azure resources
    - task: AzureCLI@2
      displayName: Validate Resources
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "=== PIPELINE 3: ACR ‚Üí APP SERVICE ==="
          echo "Validating Azure resources..."
          
          # Check Web App
          az webapp show --name $(appServiceName) --resource-group $(resourceGroup)
          echo "‚úÖ Web App validated"
          
          # Check ACR
          az acr show --name $(acrName) --resource-group $(resourceGroup)
          echo "‚úÖ ACR validated"

    # Get latest image tag from ACR
    - task: AzureCLI@2
      displayName: Get Latest Image
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Getting latest image from ACR..."
          latestTag=$(az acr repository show-tags \
            --name $(acrName) \
            --repository $(imageName) \
            --orderby time_desc \
            --query '[0]' \
            --output tsv)
          echo "##vso[task.setvariable variable=imageTag]$latestTag"
          echo "‚úÖ Using image tag: $latestTag"

    # Deploy to Web App
    - task: AzureCLI@2
      displayName: Deploy to Web App
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "=== DEPLOYING TO WEB APP ==="
          echo "Image: $(acrName).azurecr.io/$(imageName):$(imageTag)"
          echo "Target: $(appServiceName)"
          
          # Update container configuration
          az webapp config container set \
            --name $(appServiceName) \
            --resource-group $(resourceGroup) \
            --docker-custom-image-name $(acrName).azurecr.io/$(imageName):$(imageTag) \
            --docker-registry-server-url https://$(acrName).azurecr.io
          
          # Update app settings
          az webapp config appsettings set \
            --name $(appServiceName) \
            --resource-group $(resourceGroup) \
            --settings DOCKER_ENABLE_CI=true WEBSITES_PORT=80
          
          # Restart web app
          az webapp restart --name $(appServiceName) --resource-group $(resourceGroup)
          
          echo "‚úÖ Deployment completed successfully!"
          echo "üåê App URL: https://$(appServiceName).azurewebsites.net"