# Alternative ACR Docker Build and Push
# Build and push to alternative Azure Container Registry

trigger:
- main

resources:
- repo: self

variables:
  # Alternative registry configuration (UPDATE WITH YOUR ACTUAL VALUES)
  dockerRegistryServiceConnection: 'eea4dc6b-2724-41bb-8091-2c651a29d506'  # Original service connection ID
  imageRepository: 'nacimeventscape'
  containerRegistry: 'eventregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: 'EventScape'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and Push to Alternative ACR
  jobs:
  - job: Build
    displayName: Build and Push
    pool:
      vmImage: $(vmImageName)
    steps:
    
    # Verify environment
    - script: |
        echo "=== PIPELINE 6 - ALTERNATIVE ACR BUILD ==="
        echo "Checking repository structure:"
        ls -la $(Build.SourcesDirectory)
        echo "Verifying Dockerfile exists:"
        if [ -f "$(Build.SourcesDirectory)/Dockerfile" ]; then
          echo "✅ Dockerfile found"
        else
          echo "❌ Dockerfile missing"
          exit 1
        fi
        echo "Target registry: $(containerRegistry)"
        echo "Image repository: $(imageRepository)"
        echo "Build tag: $(tag)"
      displayName: 'Verify Build Environment'
    
    # Build and push to alternative ACR
    - task: Docker@2
      displayName: 'Build and Push to Alternative ACR'
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
      continueOnError: false
    
    # Success confirmation
    - script: |
        echo "=== BUILD AND PUSH SUCCESSFUL ==="
        echo "Image pushed to: $(containerRegistry)/$(imageRepository):$(tag)"
        echo "Latest tag also created: $(containerRegistry)/$(imageRepository):latest"
        echo "Alternative ACR deployment ready"
      displayName: 'Build Success Information'
      condition: succeeded()
